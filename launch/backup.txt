    <node pkg="rosbag" type="play" name="playbag1" output="screen" args="--clock $(find XIO)/bags/1.bag"/>

        Matrix3d jl(const Vector3d& Omega) {
        double theta = Omega.norm();
        if (theta < 1e-6) {
            return Matrix3d::Identity();
        }

        Vector3d a = Omega;
        a.normalize();
        double sin_theta = std::sin(theta);
        double cos_theta = std::cos(theta);
        return (sin_theta / theta) * Matrix3d ::Identity() + (1 - sin_theta / theta) * a * a.transpose() +
            (1 - cos_theta) / theta * Sophus::SO3d::hat(a);
    }
    Matrix3d jl_inv(const Vector3d& Omega) {
        double theta = Omega.norm();
        if (theta < 1e-6) {
            return Matrix3d::Identity();
        }

        Vector3d a = Omega;
        a.normalize();

        double cot_half_theta = std::cos(0.5 * theta) / std::sin(0.5 * theta);
        return 0.5 * theta * cot_half_theta * Matrix3d ::Identity() +
               (1 - 0.5 * theta * cot_half_theta) * a * a.transpose() - 0.5 * theta * Sophus::SO3d::hat(a);
    }
    Matrix3d jr_inv(const Vector3d& Omega) { return jl_inv(-Omega); }
    Matrix3d jr(const Vector3d& Omega) {return jl(-Omega);}